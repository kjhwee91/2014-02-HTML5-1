
# 첫번째
1. 할일에 넣고 엔터를 치면 할일이 추가된다.
	- 이벤트를 할당한다.(addEventListener)
	- 할일을 추가한다.(appendChild,insertAdjacentHTML)

# 두번째
1. 등록한 할일을 완료처리하기.
	- 이벤트 할당하기.
	- class추가하기(li에 completed)

2. 삭제하기
	- 이벤트 할당하기.
	- li을 서서히 사라지게 처리한 후 삭제.

3. 등록하기
	- 애니메이션 기능을 추가.

# 세번째
1. 코드 개선하기.
	- 오브젝트 형식으로.
2. 서버와 연동하기.
	- 추가할 때 API랑 연동하기.
	- 완료할 때 API랑 연동하기.
	- 삭제할 때 API랑 연동하기.
	- 가져올 때 API랑 연동하기.

#기타 응답값
{
	"fieldCount":0,
	"affectedRows":1,
	"insertId":0,
	"serverStatus":2,
	"warningCount":0,
	"message":"(Rows matched: 1 Changed: 1 Warnings: 0",
	"protocol41":true,
	"changedRows":1
}

#GET 응답값
[
{"id":2,"todo":"hi","nickname":"mixed","completed":0,"date":"2014-06-25T05:38:12.000Z"},
{"id":3,"todo":"안녕","nickname":"mixed","completed":0,"date":"2014-06-25T05:38:55.000Z"}
] 


# 네번째
1. 온라인 / 오프라인
	- 오프라인일 때 localStorage에 저장하기.
	- 온라인일 때 서버에 싱크 맞추기.

# 다섯번째
1. 뒤로 가기.
	- pushState활용하기.
2. 등록,삭제할 때 애니메이션 입히기
	- CSS3활용

