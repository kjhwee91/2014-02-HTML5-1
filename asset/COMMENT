//4주차 실습중
// 온라인 오프라인 이벤트 추가하기
// -- 온라인 오프라인 이벤트를 할당을 하고
// -- 오프라인 일 때 헤더 엘리먼트에 오프라인 클래스를 추가하고
// -- 온라인 일 때 헤더 엘리먼트에 오프라인 클래스를 삭제한다
// 히스토리 객체 관리하기

// 온라인일 경우
//	-- 초기 화면에 접속했을 때
//		1) 로컬 스토리지에서 변경된 데이터가 있는지 확인 -> 있으면 싱크, 없으면 할일 없음
//		2) 온라인으로 보냄
// -- 데이터가 수정될 떄 (완료, 삭제, 등록)
//		1) 원격으로 바로 저장
//		2) 로컬 스토리지 수정

// 오프라인일 경우
//	-- 초기 화면에 접속했을 때
//		1) 로컬 스토리지에서 데이터 가져옴 (나중에 구현)
// -- 데이터가 수정될 때 (완료, 삭제, 등록)
//		1) 로컬 스토리지로 등록 

		// 1) 로컬 스토리지 지원하는지 확인
		// 		-- 지원하는 경우 : 2) 로 진행
		//		-- 지원하지 않는 경우 : 경고창을 띄우고, 그대로 유지
		// 2) 로컬 스토리지에 저장
		//		-- id : local+i 로 저장
		// 3) list 에 추가
		// method, callback, key, send, 

// #todo-list 엘리먼트에 active(completed) 엘리먼트를 누르면
// 1) todo-list에 all-active(completed) 클래스를 추가하고
// 2) 기존 anchor 에 selected클래스를 삭제하고 
// 3) anchor selected  zmffotmfmf 추가한다
// 
// 동적으로 UI를 변경후 히스토리 추가 (history.pushState({"method" : "completed"}, null, active));
// 뒤로가기 할 때 이벤트를 받아서 변경
//  window.addEventListener("popstate", callback);

/*
	변수 선언 규칙
	전역 변수 : ValueItem
	상수 변수 : VALUE_ITEM
	나머지 : valueItem
*/